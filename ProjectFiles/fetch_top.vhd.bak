library ieee; 
use ieee.std_logic_1164.all;

entity fetch_top is
port(D : in std_logic_vector (31 downto 0);
	  address : in std_logic_vector (7 downto 0);
	  resetn,clock : in std_logic;
	  wren : in std_logic;
	  q: out std_logic_vector (31 downto 0));
end entity fetch_top;

architecture behave of fetch_top is
signal address : std_logic_vector (7 downto 0);
signal clock : std_logic := '1';
signal data_to_memory : std_logic_vector (31 downto 0);
signal wren,resetn : std_logic;
signal D : std_logic_vector (31 downto 0);

component instructionMem
port(address		: IN STD_LOGIC_VECTOR (7 DOWNTO 0);
		clock		: IN STD_LOGIC  := '1';
		data		: IN STD_LOGIC_VECTOR (31 DOWNTO 0);
		wren		: IN STD_LOGIC ;
		q		: OUT STD_LOGIC_VECTOR (31 DOWNTO 0));
end component;

component progCount
generic ( N : INTEGER := 32 ) ;
port(D : IN STD_LOGIC_VECTOR(N-1 DOWNTO 0) ;
		Resetn, Clock : IN STD_LOGIC ;
		Q : OUT STD_LOGIC_VECTOR(N-1 DOWNTO 0));
end component;

component add_block
port (in1 : in std_logic_vector (31 downto 0);
		out1 : out std_logic_vector (31 downto 0));
end component;

begin
DUT1: instructionMem port map (address,clock,data_to_memory,wren,q);
DUT2: progCounter port map (D,resetn,clock,data_to_memory);
DUT3: add_block(address,D);
end behave;